version: '3.8'

x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"

services:
  auth:
    <<: *logging
    image: thomseddon/traefik-forward-auth:2
    restart: always
    environment:
      - TZ
      - SECRET=$OAUTH_SECRET
      - PROVIDERS_GOOGLE_CLIENT_ID
      - PROVIDERS_GOOGLE_CLIENT_SECRET
      - AUTH_HOST=auth.$URL
      - COOKIE_DOMAIN=$URL
      - WHITELIST=$EMAIL
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.middlewares=auth@file
      - traefik.http.routers.auth.entrypoints=websecure
      - traefik.http.services.auth.loadbalancer.server.port=4181

  duckdns:
    <<: *logging
    image: linuxserver/duckdns
    restart: always
    environment:
      - TZ
      - TOKEN=$DUCKDNS_TOKEN
      - SUBDOMAINS=$URL

  files:
    <<: *logging
    image: machines/filestash
    restart: always
    environment:
      - TZ
    volumes:
      - $DATA_PATH/filestash/config.json:/app/data/state/config/config.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.filestash.middlewares=auth@file
      - traefik.http.routers.filestash.entrypoints=websecure
      - traefik.http.services.filestash.loadbalancer.server.port=8334

  grafana:
    <<: *logging
    image: grafana/grafana
    restart: always
    user: 1000:1000
    environment:
      - TZ
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_FROM_ADDRESS=grafana@$URL
      - GF_SMTP_USER=$EMAIL
      - GF_SMTP_PASSWORD
    volumes:
      - $DATA_PATH/grafana:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.middlewares=auth@file
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  jaeger:
    <<: *logging
    image: jaegertracing/all-in-one
    restart: always
    environment:
      - TZ
    labels:
      - traefik.enable=true
      - traefik.http.routers.jaeger.middlewares=auth@file
      - traefik.http.routers.jaeger.entrypoints=websecure
      - traefik.http.services.jaeger.loadbalancer.server.port=16686

  jitsi:
    <<: *logging
    image: jitsi/web
    restart: always
    networks:
      default:
        aliases:
          - $XMPP_DOMAIN
    volumes:
      - $DATA_PATH/jitsi/web:/config
    environment:
      - TZ
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - ENABLE_TRANSCRIPTIONS
      - DISABLE_HTTPS
      - JICOFO_AUTH_USER
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_BOSH_URL_BASE
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - PUBLIC_URL=https://jitsi.$URL
    labels:
      - traefik.enable=true
      - traefik.http.routers.jitsi.entrypoints=websecure
      - traefik.http.services.jitsi.loadbalancer.server.port=80

  jitsi-jicofo:
    <<: *logging
    image: jitsi/jicofo
    restart: always
    depends_on:
      - jitsi-prosody
    volumes:
      - $DATA_PATH/jitsi/jicofo:/config
    environment:
      - TZ
      - ENABLE_AUTH
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_BREWERY_MUC

  jitsi-jvb:
    <<: *logging
    image: jitsi/jvb
    restart: always
    depends_on:
      - jitsi-prosody
    ports:
      - "$JVB_PORT:$JVB_PORT/udp"
      - "$JVB_TCP_PORT:$JVB_TCP_PORT"
    volumes:
      - $DATA_PATH/jitsi/jvb:/config
    environment:
      - TZ
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JVB_BREWERY_MUC
      - JVB_PORT
      - JVB_TCP_HARVESTER_DISABLED
      - JVB_TCP_PORT
      - JVB_STUN_SERVERS

  jitsi-prosody:
    <<: *logging
    image: jitsi/prosody
    restart: always
    networks:
      default:
        aliases:
          - $XMPP_SERVER
    volumes:
      - $DATA_PATH/jitsi/prosody/config:/config
      - $DATA_PATH/jitsi/prosody/prosody-plugins-custom:/prosody-plugins-custom
    environment:
      - TZ
      - AUTH_TYPE
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - GLOBAL_MODULES
      - GLOBAL_CONFIG
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - LOG_LEVEL

  loki:
    <<: *logging
    image: grafana/loki
    restart: always
    ports:
      - "3100:3100"
    environment:
      - TZ
    volumes:
      - $DATA_PATH/loki:/loki

  minecraft:
    <<: *logging
    image: itzg/minecraft-server
    restart: always
    ports:
      - "25565:25565"
    environment:
      - TZ
      - EULA=TRUE
      - MEMORY=3G
      - VERSION=1.16.1
    volumes:
      - $DATA_PATH/minecraft:/data
      - $REPO_PATH/minecraft/ops.json:/data/ops.json
      - $REPO_PATH/minecraft/whitelist.json:/data/whitelist.json
      - $REPO_PATH/minecraft/banned-ips.json:/data/banned-ips.json
      - $REPO_PATH/minecraft/banned-players.json:/data/banned-players.json

  pihole:
    <<: *logging
    image: pihole/pihole
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "53:53"
      - "53:53/udp"
    environment:
      - TZ
      - WEBPASSWORD=
    volumes:
      - $DATA_PATH/pihole:/etc/pihole
      - $DATA_PATH/dnsmasq:/etc/dnsmasq.d
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.pihole.addprefix.prefix=/admin
      - traefik.http.routers.pihole.middlewares=auth@file,pihole
      - traefik.http.routers.pihole.entrypoints=websecure
      - traefik.http.services.pihole.loadbalancer.server.port=80

  plex:
    <<: *logging
    image: plexinc/pms-docker
    restart: always
    ports:
      - "32400:32400"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ
      - PLEX_CLAIM
      - ADVERTISE_IP=https://plex.$URL
    volumes:
      - $DATA_PATH/plex/config:/config
      - $DATA_PATH/plex/data:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.entrypoints=websecure
      - traefik.http.services.plex.loadbalancer.server.port=32400

  portainer:
    <<: *logging
    image: portainer/portainer
    restart: always
    environment:
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -H unix:///var/run/docker.sock --no-auth
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=auth@file
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.services.portainer.loadbalancer.server.port=9000

  prometheus:
    <<: *logging
    image: prom/prometheus
    restart: always
    user: 1000:1000
    environment:
      - TZ
    volumes:
      - $REPO_PATH/prometheus:/etc/prometheus
      - $DATA_PATH/prometheus:/prometheus
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.middlewares=auth@file
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  rclone:
    <<: *logging
    image: rclone/rclone
    restart: always
    environment:
      - TZ
      - RCLONE_CONFIG_LOCAL_TYPE=local
      - RCLONE_CONFIG_REMOTE_TYPE=drive
      - RCLONE_CONFIG_REMOTE_SCOPE=drive.appfolder
      - RCLONE_CONFIG_REMOTE_ROOT_FOLDER_ID=appDataFolder
      - RCLONE_CONFIG_REMOTE_CLIENT_ID
      - RCLONE_CONFIG_REMOTE_CLIENT_SECRET
      - RCLONE_CONFIG_REMOTE_TOKEN
      - RCLONE_CONFIG_ENCRYPTED_TYPE=crypt
      - "RCLONE_CONFIG_ENCRYPTED_REMOTE=remote:"
      - RCLONE_CONFIG_ENCRYPTED_FILENAME_ENCRYPTION=standard
      - RCLONE_CONFIG_ENCRYPTED_DIRECTORY_NAME_ENCRYPTION=true
      - RCLONE_CONFIG_ENCRYPTED_PASSWORD
      - RCLONE_CONFIG_ENCRYPTED_PASSWORD2
    volumes:
      - $DATA_PATH:/data/server
      - $BACKUP_PATH:/data/backup
      - $REPO_PATH/rclone/local-backup.sh:/etc/periodic/daily/backup:ro
      - $REPO_PATH/rclone/remote-backup.sh:/etc/periodic/weekly/backup:ro
    entrypoint: /bin/sh
    command: ["-c", "crond -f -l 5"]

  torrent:
    <<: *logging
    image: markusmcnugen/qbittorrentvpn
    restart: always
    privileged: true
    environment:
      - TZ
      - VPN_USERNAME
      - VPN_PASSWORD
      - VPN_ENABLED=yes
      - LAN_NETWORK=192.168.1.0/24
      - NAME_SERVERS=1.1.1.1,8.8.8.8
      - PUID=1000
      - PGID=1000
    volumes:
      - $DATA_PATH/qbittorrent/config:/config
      - $DATA_PATH/qbittorrent/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.middlewares=auth@file
      - traefik.http.routers.qbittorrent.entrypoints=websecure
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080

  traefik:
    <<: *logging
    image: traefik:2.2.5
    restart: always
    ports:
      - "8080:80"
      - "4433:443"
    environment:
      - TZ
      - DUCKDNS_TOKEN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $REPO_PATH/traefik/traefik.yml:/etc/traefik/traefik.yml
      - $REPO_PATH/traefik/config:/config
      - $DATA_PATH/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.middlewares=auth@file
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
