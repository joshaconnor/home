version: '3.8'

services:
  # dashboard:
  #   build: dashboard
  #   restart: always
  #   environment:
  #     - TZ
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.dashboard.rule=Host(`$URL`)
  #     - traefik.http.routers.dashboard.middlewares=auth@file
  #     - traefik.http.routers.dashboard.entrypoints=websecure
  #     - traefik.http.services.dashboard.loadbalancer.server.port=80

  minecraft:
    image: itzg/minecraft-server
    restart: always
    ports:
      - "25565:25565"
    environment:
      - TZ
      - EULA=TRUE
      - MEMORY=3G
      - VERSION=1.16.3
      - TYPE=FABRIC
    volumes:
      - $SERVER_PATH/minecraft:/data
      - $REPO_PATH/minecraft/ops.json:/data/ops.json
      - $REPO_PATH/minecraft/whitelist.json:/data/whitelist.json

  minecraft2:
    image: itzg/minecraft-server
    restart: always
    ports:
      - "25566:25565"
    environment:
      - TZ
      - EULA=TRUE
      - MEMORY=3G
      - VERSION=1.13.2
    volumes:
      - $SERVER_PATH/minecraft2:/data
      - $REPO_PATH/minecraft/ops.json:/data/ops.json
      - $REPO_PATH/minecraft/whitelist.json:/data/whitelist.json

  # static:
  #   image: nginx
  #   restart: always
  #   environment:
  #     - TZ
  #   volumes:
  #     - $REPO_PATH/nginx:/usr/share/nginx/html
  #     - $SERVER_PATH/minecraft2/world/resources.zip:/usr/share/nginx/html/resources.zip
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.static.rule=HostRegexp(`{host:.+}`)
  #     - traefik.http.routers.static.priority=1
  #     - traefik.http.routers.static.entrypoints=websecure
  #     - traefik.http.services.static.loadbalancer.server.port=80
