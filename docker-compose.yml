version: '3'

services:
  traefik:
    image: traefik:2.2
    restart: always
    ports:
      - "8080:80"
      - "4433:443"
    environment:
      - TZ
      - DUCKDNS_TOKEN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/traefik.yml:/etc/traefik/traefik.yml
      - $PWD/traefik:/config
      - /data/server/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.tls.domains[0].main=$URL
      - traefik.http.routers.traefik.tls.domains[0].sans=*.$URL
      - traefik.http.routers.traefik.middlewares=auth@file
      - traefik.http.routers.traefik.entrypoints=web,websecure
      - traefik.http.routers.traefik.rule=Host(`$URL`)
      - traefik.http.routers.traefik.service=api@internal

  portainer:
    image: portainer/portainer
    restart: always
    environment:
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --no-auth
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.routers.portainer.middlewares=auth@file
      - traefik.http.routers.portainer.entrypoints=web,websecure
      - traefik.http.routers.portainer.rule=Host(`portainer.$URL`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000

  duckdns:
    image: linuxserver/duckdns
    restart: always
    environment:
      - TZ
      - TOKEN=$DUCKDNS_TOKEN
      - SUBDOMAINS=$URL

  oauth:
    image: thomseddon/traefik-forward-auth:2
    restart: always
    environment:
      - TZ
      - SECRET
      - PROVIDERS_GOOGLE_CLIENT_ID
      - PROVIDERS_GOOGLE_CLIENT_SECRET
      - AUTH_HOST=auth.$URL
      - COOKIE_DOMAIN=$URL
      - WHITELIST=matthewchill7@gmail.com
    labels:
      - traefik.enable=true
      - traefik.http.routers.oauth.tls=true
      - traefik.http.routers.oauth.tls.certresolver=letsencrypt
      - traefik.http.routers.oauth.middlewares=auth@file
      - traefik.http.routers.oauth.entrypoints=web,websecure
      - traefik.http.routers.oauth.rule=Host(`auth.$URL`)
      - traefik.http.services.oauth.loadbalancer.server.port=4181

  pihole:
    image: pihole/pihole
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "53:53"
      - "53:53/udp"
    environment:
      - TZ
      - WEBPASSWORD=
    volumes:
      - /data/server/pihole:/etc/pihole
      - /data/server/dnsmasq:/etc/dnsmasq.d
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.pihole.addprefix.prefix=/admin
      - traefik.http.routers.pihole.tls=true
      - traefik.http.routers.pihole.tls.certresolver=letsencrypt
      - traefik.http.routers.pihole.middlewares=auth@file,pihole
      - traefik.http.routers.pihole.entrypoints=web,websecure
      - traefik.http.routers.pihole.rule=Host(`pihole.$URL`)
      - traefik.http.services.pihole.loadbalancer.server.port=80

  jaeger:
    image: jaegertracing/all-in-one
    restart: always
    environment:
      - TZ
    labels:
      - traefik.enable=true
      - traefik.http.routers.jaeger.tls=true
      - traefik.http.routers.jaeger.tls.certresolver=letsencrypt
      - traefik.http.routers.jaeger.middlewares=auth@file
      - traefik.http.routers.jaeger.entrypoints=web,websecure
      - traefik.http.routers.jaeger.rule=Host(`jaeger.$URL`)
      - traefik.http.services.jaeger.loadbalancer.server.port=16686

  sftp:
    image: atmoz/sftp:alpine
    restart: always
    ports:
      - "2222:22"
    environment:
      - TZ
      - SFTP_USERS=mchill:$$1$$KvZr5bVS$$maxr0gZ.kIm0dRYKs3Yh91:e:1000
    volumes:
      - $PWD/id_rsa.pub:/home/mchill/.ssh/keys/id_rsa.pub:ro
      - /data/server/keys/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      - /data/server/keys/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
      - /data/server:/home/mchill/server

  filestash:
    image: machines/filestash
    restart: always
    environment:
      - TZ
    volumes:
      - /data/server/filestash/config.json:/app/data/state/config/config.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.filestash.tls=true
      - traefik.http.routers.filestash.tls.certresolver=letsencrypt
      - traefik.http.routers.filestash.middlewares=auth@file
      - traefik.http.routers.filestash.entrypoints=web,websecure
      - traefik.http.routers.filestash.rule=Host(`files.$URL`)
      - traefik.http.services.filestash.loadbalancer.server.port=8334

  plex:
    image: plexinc/pms-docker
    restart: always
    ports:
      - "32400:32400"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ
      - PLEX_CLAIM
      - ADVERTISE_IP=https://plex.$URL
    volumes:
      - /data/server/plex/config:/config
      - /data/server/plex/data:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.tls=true
      - traefik.http.routers.plex.tls.certresolver=letsencrypt
      - traefik.http.routers.plex.entrypoints=web,websecure
      - traefik.http.routers.plex.rule=Host(`plex.$URL`)
      - traefik.http.services.plex.loadbalancer.server.port=32400

  qbittorrent:
    image: markusmcnugen/qbittorrentvpn
    restart: always
    privileged: true
    environment:
      - TZ
      - VPN_USERNAME
      - VPN_PASSWORD
      - VPN_ENABLED=yes
      - LAN_NETWORK=192.168.1.0/24
      - NAME_SERVERS=1.1.1.1,8.8.8.8
      - PUID=1000
      - PGID=1000
    volumes:
      - /data/server/qbittorrent/config:/config
      - /data/server/qbittorrent/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.tls=true
      - traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt
      - traefik.http.routers.qbittorrent.middlewares=auth@file
      - traefik.http.routers.qbittorrent.entrypoints=web,websecure
      - traefik.http.routers.qbittorrent.rule=Host(`torrent.$URL`)
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080

  minecraft:
    image: itzg/minecraft-server
    restart: always
    ports:
      - "25565:25565"
    environment:
      - TZ
      - EULA=TRUE
      - MEMORY=3G
      - VERSION=1.15.2
    volumes:
      - $PWD/minecraft:/data
      - /data/server/minecraft:/data/world

  jitsi-web:
    image: jitsi/web
    restart: always
    networks:
      default:
        aliases:
          - $XMPP_DOMAIN
    volumes:
      - /data/server/jitsi/web:/config
    environment:
      - TZ
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - ENABLE_TRANSCRIPTIONS
      - DISABLE_HTTPS
      - JICOFO_AUTH_USER
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_BOSH_URL_BASE
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - PUBLIC_URL=https://jitsi.$URL
    labels:
      - traefik.enable=true
      - traefik.http.routers.jitsi.tls=true
      - traefik.http.routers.jitsi.tls.certresolver=letsencrypt
      - traefik.http.routers.jitsi.entrypoints=web,websecure
      - traefik.http.routers.jitsi.rule=Host(`jitsi.$URL`)
      - traefik.http.services.jitsi.loadbalancer.server.port=80

  jitsi-prosody:
    image: jitsi/prosody
    restart: always
    networks:
      default:
        aliases:
          - $XMPP_SERVER
    volumes:
      - /data/server/jitsi/prosody/config:/config
      - /data/server/jitsi/prosody/prosody-plugins-custom:/prosody-plugins-custom
    environment:
      - TZ
      - AUTH_TYPE
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - GLOBAL_MODULES
      - GLOBAL_CONFIG
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - LOG_LEVEL

  jitsi-jicofo:
    image: jitsi/jicofo
    restart: always
    depends_on:
      - jitsi-prosody
    volumes:
      - /data/server/jitsi/jicofo:/config
    environment:
      - TZ
      - ENABLE_AUTH
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_BREWERY_MUC

  jitsi-jvb:
    image: jitsi/jvb
    restart: always
    depends_on:
      - jitsi-prosody
    ports:
      - "$JVB_PORT:$JVB_PORT/udp"
      - "$JVB_TCP_PORT:$JVB_TCP_PORT"
    volumes:
      - /data/server/jitsi/jvb:/config
    environment:
      - TZ
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JVB_BREWERY_MUC
      - JVB_PORT
      - JVB_TCP_HARVESTER_DISABLED
      - JVB_TCP_PORT
      - JVB_STUN_SERVERS
